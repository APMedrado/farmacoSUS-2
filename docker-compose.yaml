services:
  mongo:
    image: mongo
    container_name: mongodb
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: pass
    ports:
      - "27017-27019:27017-27019"
    networks:
      - backend_network

  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.4
    hostname: zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - backend_network

  kafka:
    image: confluentinc/cp-kafka:7.4.4
    hostname: kafka
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092,PLAINTEXT_HOST://localhost:9093
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:9093
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks:
      - backend_network

  topic-init:
    image: confluentinc/cp-kafka:7.4.4
    depends_on:
      - kafka
    volumes:
      - ./backend/create-topics.sh:/app/create-topics.sh
    entrypoint: sh /app/create-topics.sh
    networks:
      - backend_network

  django:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: django
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/app
    depends_on:
      - kafka
      - topic-init
    networks:
      - backend_network
    entrypoint: sh /app/wait_for_kafka.sh sh -c "python manage.py runserver 0.0.0.0:8000 & python manage.py start_consumers"
    
    frontend:
      image: node:latest
      container_name: frontend
      working_dir: /app/frontend
      volumes:
        - ./frontend:/app/frontend
      ports:
        - "5025:5173"  # Porta 5025 na VM Ã© mapeada para a porta 5173 do frontend Vue
      command: npm run dev
      networks:
        - backend_network

networks:
  backend_network: